{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// function Review({ userId, imgId }) {\n//   // declare initial states\n//   const [photo, setPhoto] = useState({});\n//   const [textReview, setTextReview] = useState(\"\");\n//   const [reviews, setReviews] = useState([]);\n//   const [showReviews, setShowReviews] = useState(false);\n//   useEffect(() => {\n//     // get single images\n//     fetch(`http://127.0.0.1:3000/galleries/${imgId}`, {\n//       method: \"GET\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((res) => {\n//         res.json().then((data) => setPhoto(data));\n//       })\n//       .catch((err) => {\n//         alert(err);\n//       });\n//   }, [imgId]);\n//   // show all reviews\n//   const getAllReviews = async () => {\n//     // get reviews\n//     let res = await fetch(`http://127.0.0.1:3000/reviews/${imgId}`, {\n//       method: \"GET\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//     // res.json().then((data) => setReviews(data));\n//     let data = await res.json()\n//     console.log(data)\n//     return data\n//     // alert(reviews);\n//   };\n//   // for clicking button\n//   const handleGetAllReviews = () => {\n//     setShowReviews(true);\n//     getAllReviews().then((res)=>setReviews(res));\n//   };\n//   // post review\n//   const submitReview = () => {\n//     // push data\n//     fetch(\"https://pure-anchorage-05380.herokuapp.com/reviews\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({\n//         gallery_id: imgId,\n//         user_id: 2, // TODO\n//         review: textReview,\n//       }),\n//     })\n//       .then((res) => {\n//         alert(\"review sent successfully\");\n//       })\n//       .catch((err) => alert(err));\n//   };\n//   return (\n//     <div className=\"container w-50 mb-5\">\n//       <div className=\"card m-4\" style={{ maxWidth: \"40rem\" }}>\n//         <h3 className=\"card-header\">{photo.title}</h3>\n//         <img\n//           src={photo.image}\n//           className=\"d-block user-select-none\"\n//           alt={photo.title}\n//           width=\"100%\"\n//           height=\"100%\"\n//         />\n//         <ul className=\"list-group list-group-flush\">\n//           <li className=\"list-group-item\">{photo.category}</li>\n//         </ul>\n//         <div className=\"card-footer text-muted\">{photo.date}</div>\n//       </div>\n//       <form onSubmit={submitReview}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"ReviewTextarea\" className=\"form-label mt-4\">\n//             Type your Review here...\n//           </label>\n//           <textarea\n//             className=\"form-control\"\n//             id=\"ReviewTextarea\"\n//             value={textReview}\n//             onChange={(e) => setTextReview(e.target.value)}\n//             rows=\"2\"\n//           ></textarea>\n//           <div className=\"d-flex justify-content-center mb-2\">\n//             <button type=\"submit\" className=\"btn btn-primary btn-sm mt-2\">\n//               Submit\n//             </button>\n//           </div>\n//           {showReviews === true ? (\n//             reviews.map(({review}) => (\n//               <div className=\"d-flex justify-content-center mb-2 list-group\">\n//                 <p className=\"list-group-item list-group-item-action\">\n//                   {review}\n//                 </p>\n//               </div>\n//             ))\n//           ) : (\n//             <div className=\"d-grid gap-2\">\n//               <button\n//                 className=\"btn btn-lg btn-primary\"\n//                 type=\"button\"\n//                 onClick={handleGetAllReviews}\n//               >\n//                 Show Reviews\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n// export default Review;","map":{"version":3,"names":[],"sources":["/home/karrey/Documents/project/photofolio/photo-folio-fronted/src/Components/reviewComponent.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// function Review({ userId, imgId }) {\n//   // declare initial states\n//   const [photo, setPhoto] = useState({});\n//   const [textReview, setTextReview] = useState(\"\");\n//   const [reviews, setReviews] = useState([]);\n//   const [showReviews, setShowReviews] = useState(false);\n\n//   useEffect(() => {\n//     // get single images\n//     fetch(`http://127.0.0.1:3000/galleries/${imgId}`, {\n//       method: \"GET\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//       .then((res) => {\n//         res.json().then((data) => setPhoto(data));\n//       })\n//       .catch((err) => {\n//         alert(err);\n//       });\n//   }, [imgId]);\n\n//   // show all reviews\n//   const getAllReviews = async () => {\n//     // get reviews\n//     let res = await fetch(`http://127.0.0.1:3000/reviews/${imgId}`, {\n//       method: \"GET\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//     })\n//     // res.json().then((data) => setReviews(data));\n//     let data = await res.json()\n//     console.log(data)\n//     return data\n//     // alert(reviews);\n//   };\n\n//   // for clicking button\n//   const handleGetAllReviews = () => {\n//     setShowReviews(true);\n//     getAllReviews().then((res)=>setReviews(res));\n//   };\n\n//   // post review\n//   const submitReview = () => {\n//     // push data\n//     fetch(\"https://pure-anchorage-05380.herokuapp.com/reviews\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({\n//         gallery_id: imgId,\n//         user_id: 2, // TODO\n//         review: textReview,\n//       }),\n//     })\n//       .then((res) => {\n//         alert(\"review sent successfully\");\n//       })\n//       .catch((err) => alert(err));\n//   };\n//   return (\n//     <div className=\"container w-50 mb-5\">\n//       <div className=\"card m-4\" style={{ maxWidth: \"40rem\" }}>\n//         <h3 className=\"card-header\">{photo.title}</h3>\n//         <img\n//           src={photo.image}\n//           className=\"d-block user-select-none\"\n//           alt={photo.title}\n//           width=\"100%\"\n//           height=\"100%\"\n//         />\n\n//         <ul className=\"list-group list-group-flush\">\n//           <li className=\"list-group-item\">{photo.category}</li>\n//         </ul>\n\n//         <div className=\"card-footer text-muted\">{photo.date}</div>\n//       </div>\n//       <form onSubmit={submitReview}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"ReviewTextarea\" className=\"form-label mt-4\">\n//             Type your Review here...\n//           </label>\n//           <textarea\n//             className=\"form-control\"\n//             id=\"ReviewTextarea\"\n//             value={textReview}\n//             onChange={(e) => setTextReview(e.target.value)}\n//             rows=\"2\"\n//           ></textarea>\n//           <div className=\"d-flex justify-content-center mb-2\">\n//             <button type=\"submit\" className=\"btn btn-primary btn-sm mt-2\">\n//               Submit\n//             </button>\n//           </div>\n\n//           {showReviews === true ? (\n//             reviews.map(({review}) => (\n//               <div className=\"d-flex justify-content-center mb-2 list-group\">\n//                 <p className=\"list-group-item list-group-item-action\">\n//                   {review}\n//                 </p>\n//               </div>\n//             ))\n//           ) : (\n//             <div className=\"d-grid gap-2\">\n//               <button\n//                 className=\"btn btn-lg btn-primary\"\n//                 type=\"button\"\n//                 onClick={handleGetAllReviews}\n//               >\n//                 Show Reviews\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Review;\n"],"mappings},"metadata":{},"sourceType":"module"}